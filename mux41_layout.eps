%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
150 150 4600 6660 600 pap
%%Page: cds 1
gis
rotp
819 0 5841 4599 clwin
819 0 5841 4599 clwin
819 0 5841 4599 clwin
1 fds
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 <8888> fdf
1 <4444> fdf
1 <2222> fdf
1 <1111> fdf
1 fde
1 sfp
0 800 400 slc
0 800 400 sfc
ssls
836 3566 1657 4182 dbf
616 821 836 3566 dbu
3061 348 3797 912 dbf
564 736 3061 348 dbu
3797 365 3917 1238 dbf
873 120 3797 365 dbu
836 3223 1657 3771 dbf
548 821 836 3223 dbu
1075 3771 1486 4114 dbf
343 411 1075 3771 dbu
1092 365 3061 1204 dbf
839 1969 1092 365 dbu
1212 22 1623 365 dbf
343 411 1212 22 dbu
1657 3395 3626 4233 dbf
838 1969 1657 3395 dbu
1777 4233 2188 4576 dbf
343 411 1777 4233 dbu
2975 912 3797 1460 dbf
548 822 2975 912 dbu
3215 570 3626 912 dbf
342 411 3215 570 dbu
3866 365 5834 1204 dbf
839 1968 3866 365 dbu
4328 22 4739 365 dbf
343 411 4328 22 dbu
2 fds
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 fde
2 sfp
0 800 400 slc
0 800 400 sfc
1041 2881 1178 3018 dbf
137 137 1041 2881 dbu
1212 3874 1349 4011 dbf
137 137 1212 3874 dbu
1041 2881 1452 2984 dbf
103 411 1041 2881 dbu
1315 2881 1452 3018 dbf
137 137 1315 2881 dbu
1349 125 1486 262 dbf
137 137 1349 125 dbu
1298 1734 2856 1940 dbf
206 1558 1298 1734 dbu
1914 4336 2051 4473 dbf
137 137 1914 4336 dbu
1863 2659 3421 2864 dbf
205 1558 1863 2659 dbu
3181 1666 3318 1803 dbf
137 137 3181 1666 dbu
3352 673 3489 810 dbf
137 137 3352 673 dbu
3181 1700 3592 1803 dbf
103 411 3181 1700 dbu
3455 1666 3592 1803 dbf
137 137 3455 1666 dbu
4465 125 4602 262 dbf
137 137 4465 125 dbu
4071 1734 5629 1940 dbf
206 1558 4071 1734 dbu
1000 502 0 slc
1000 502 0 sfc
1041 3429 1178 3566 dbf
137 137 1041 3429 dbu
1041 3429 1452 3532 dbf
103 411 1041 3429 dbu
1315 3429 1452 3566 dbf
137 137 1315 3429 dbu
1366 2590 1503 2727 dbf
137 137 1366 2590 dbu
1983 2094 2120 2231 dbf
137 137 1983 2094 dbu
1298 587 2856 998 dbf
411 1558 1298 587 dbu
1828 2368 1965 2505 dbf
137 137 1828 2368 dbu
1863 3600 3421 4011 dbf
411 1558 1863 3600 dbu
3284 2368 3421 2505 dbf
137 137 3284 2368 dbu
3181 1118 3318 1255 dbf
137 137 3181 1118 dbu
3181 1152 3592 1255 dbf
103 411 3181 1152 dbu
3455 1118 3592 1255 dbf
137 137 3455 1118 dbu
3506 1957 3643 2094 dbf
137 137 3506 1957 dbu
4756 2094 4893 2231 dbf
137 137 4756 2094 dbu
4071 587 5629 998 dbf
411 1558 4071 587 dbu
0 800 400 slc
0 800 400 sfc
273 274 1144 3806 dbu
308 547 973 2796 dbu
273 274 1281 57 dbu
376 1695 1229 1649 dbu
274 274 1846 4268 dbu
377 1695 1794 2573 dbu
274 273 3284 604 dbu
308 548 3112 1580 dbu
273 274 4396 57 dbu
376 1694 4003 1649 dbu
1000 502 0 slc
1000 502 0 sfc
308 547 973 3343 dbu
274 274 1298 2522 dbu
274 274 1914 2025 dbu
582 1695 1229 502 dbu
274 274 1760 2299 dbu
582 1695 1794 3515 dbu
274 274 3215 2299 dbu
308 548 3112 1032 dbu
274 274 3438 1888 dbu
274 274 4687 2025 dbu
582 1694 4003 502 dbu
3 fds
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 <aaaa> fdf
3 <5555> fdf
3 fde
3 sfp
1000 0 0 slc
1000 0 0 sfc
1075 3155 1212 3292 dbf
137 137 1075 3155 dbu
1212 3069 dpb
1212 3429 dpv
1281 3429 dpv
1281 3069 dpv
dpf
1212 3069 dpb
1212 3429 dpv
1281 3429 dpv
1281 3069 dpv
dpu
0 360 1246 3069 dls
1212 3343 1281 3651 dbf
308 69 1212 3343 dbu
1212 2796 1281 3069 dbf
273 69 1212 2796 dbu
1332 1512 1469 1649 dbf
137 137 1332 1512 dbu
1469 502 1537 1084 dbf
582 68 1469 502 dbu
1469 1649 dpb
1469 1084 dpv
1537 1084 dpv
1537 1649 dpv
dpf
1469 1649 dpb
1469 1084 dpv
1537 1084 dpv
1537 1649 dpv
dpu
0 -565 1503 1649 dls
1469 1649 1537 2025 dbf
376 68 1469 1649 dbu
1674 1067 1811 1204 dbf
137 137 1674 1067 dbu
1811 502 1880 1084 dbf
582 69 1811 502 dbu
1811 1649 dpb
1811 1084 dpv
1880 1084 dpv
1880 1649 dpv
dpf
1811 1649 dpb
1811 1084 dpv
1880 1084 dpv
1880 1649 dpv
dpu
0 -565 1846 1649 dls
1811 1649 1880 2025 dbf
376 69 1811 1649 dbu
2154 502 2222 1084 dbf
582 68 2154 502 dbu
2154 1649 dpb
2154 1084 dpv
2222 1084 dpv
2222 1649 dpv
dpf
2154 1649 dpb
2154 1084 dpv
2222 1084 dpv
2222 1649 dpv
dpu
0 -565 2188 1649 dls
2154 1649 2222 2025 dbf
376 68 2154 1649 dbu
2120 365 2256 502 dbf
137 136 2120 365 dbu
2479 1289 2616 1426 dbf
137 137 2479 1289 dbu
2616 502 2684 1084 dbf
582 68 2616 502 dbu
2616 1649 dpb
2616 1084 dpv
2684 1084 dpv
2684 1649 dpv
dpf
2616 1649 dpb
2616 1084 dpv
2684 1084 dpv
2684 1649 dpv
dpu
0 565 2650 1084 dls
2616 1649 2684 2025 dbf
376 68 2616 1649 dbu
1897 2950 2034 3087 dbf
137 137 1897 2950 dbu
2034 3515 2102 4097 dbf
582 68 2034 3515 dbu
2034 2950 dpb
2034 3515 dpv
2102 3515 dpv
2102 2950 dpv
dpf
2034 2950 dpb
2034 3515 dpv
2102 3515 dpv
2102 2950 dpv
dpu
0 565 2068 2950 dls
2034 2573 2102 2950 dbf
377 68 2034 2573 dbu
2376 3515 2445 4302 dbf
787 69 2376 3515 dbu
2376 2950 dpb
2376 3515 dpv
2445 3515 dpv
2445 2950 dpv
dpf
2376 2950 dpb
2376 3515 dpv
2445 3515 dpv
2445 2950 dpv
dpu
0 565 2411 2950 dls
2376 2573 2445 2950 dbf
377 69 2376 2573 dbu
2342 4302 2479 4439 dbf
137 137 2342 4302 dbu
2719 3515 2787 4302 dbf
787 68 2719 3515 dbu
2719 2950 dpb
2719 3515 dpv
2787 3515 dpv
2787 2950 dpv
dpf
2719 2950 dpb
2719 3515 dpv
2787 3515 dpv
2787 2950 dpv
dpu
0 565 2753 2950 dls
2719 2573 2787 2950 dbf
377 68 2719 2573 dbu
2684 4302 2821 4439 dbf
137 137 2684 4302 dbu
3044 3172 3181 3309 dbf
137 137 3044 3172 dbu
3181 3515 3249 4097 dbf
582 68 3181 3515 dbu
3181 2950 dpb
3181 3515 dpv
3249 3515 dpv
3249 2950 dpv
dpf
3181 2950 dpb
3181 3515 dpv
3249 3515 dpv
3249 2950 dpv
dpu
0 -565 3215 3515 dls
3181 2573 3249 2950 dbf
377 68 3181 2573 dbu
3215 1392 3352 1529 dbf
137 137 3215 1392 dbu
3352 1614 dpb
3352 1255 dpv
3421 1255 dpv
3421 1614 dpv
dpf
3352 1614 dpb
3352 1255 dpv
3421 1255 dpv
3421 1614 dpv
dpu
0 -359 3386 1614 dls
3352 1032 3421 1340 dbf
308 69 3352 1032 dbu
3352 1614 3421 1888 dbf
274 69 3352 1614 dbu
4105 1512 4242 1649 dbf
137 137 4105 1512 dbu
4242 502 4311 1084 dbf
582 69 4242 502 dbu
4242 1649 dpb
4242 1084 dpv
4311 1084 dpv
4311 1649 dpv
dpf
4242 1649 dpb
4242 1084 dpv
4311 1084 dpv
4311 1649 dpv
dpu
0 -565 4276 1649 dls
4242 1649 4311 2025 dbf
376 69 4242 1649 dbu
4448 1512 4585 1649 dbf
137 137 4448 1512 dbu
4585 502 4653 1084 dbf
582 68 4585 502 dbu
4585 1649 dpb
4585 1084 dpv
4653 1084 dpv
4653 1649 dpv
dpf
4585 1649 dpb
4585 1084 dpv
4653 1084 dpv
4653 1649 dpv
dpu
0 -565 4619 1649 dls
4585 1649 4653 2025 dbf
376 68 4585 1649 dbu
4790 1477 4927 1614 dbf
137 137 4790 1477 dbu
4927 502 4995 1084 dbf
582 68 4927 502 dbu
4927 1649 dpb
4927 1084 dpv
4995 1084 dpv
4995 1649 dpv
dpf
4927 1649 dpb
4927 1084 dpv
4995 1084 dpv
4995 1649 dpv
dpu
0 -565 4961 1649 dls
4927 1649 4995 2025 dbf
376 68 4927 1649 dbu
5252 1101 5389 1238 dbf
137 137 5252 1101 dbu
5389 502 5458 1084 dbf
582 69 5389 502 dbu
5389 1649 dpb
5389 1084 dpv
5458 1084 dpv
5458 1649 dpv
dpf
5389 1649 dpb
5389 1084 dpv
5458 1084 dpv
5458 1649 dpv
dpu
0 565 5423 1084 dls
5389 1649 5458 2025 dbf
376 69 5389 1649 dbu
4 fds
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 <1111> fdf
4 <2222> fdf
4 <4444> fdf
4 <8888> fdf
4 fde
4 sfp
0 0 1000 slc
0 0 1000 sfc
836 4131 938 4233 dbf
102 102 836 4131 dbu
1195 1529 dpb
1195 1631 dpv
1332 1631 dpv
1332 1529 dpv
dpf
1195 1529 dpb
1195 1631 dpv
1332 1631 dpv
1332 1529 dpv
dpu
-137 0 1332 1580 dls
1606 2967 dpb
1606 2453 dpv
1092 2453 dpv
1092 1529 dpv
1195 1529 dpv
1195 2350 dpv
1709 2350 dpv
1709 2967 dpv
dpf
1606 2967 dpb
1606 2453 dpv
1092 2453 dpv
1092 1529 dpv
1195 1529 dpv
1195 2350 dpv
1709 2350 dpv
1709 2967 dpv
dpu
1657 2967 dlt
0 -565 dlv
-513 0 dlv
0 -873 dlv
dle
1743 3069 dpb
1743 3275 dpv
1606 3275 dpv
1606 3172 dpv
1640 3172 dpv
1640 3069 dpv
dpf
1743 3069 dpb
1743 3275 dpv
1606 3275 dpv
1606 3172 dpv
1640 3172 dpv
1640 3069 dpv
dpu
1692 3069 dlt
0 154 dlv
-86 0 dlv
dle
1674 1067 1811 1204 dbf
137 137 1674 1067 dbu
1606 2967 dpb
1606 3069 dpv
1897 3069 dpv
1897 2967 dpv
dpf
1606 2967 dpb
1606 3069 dpv
1897 3069 dpv
1897 2967 dpv
dpu
291 0 1606 3018 dls
1983 3480 dpb
1709 3480 dpv
1709 4233 dpv
819 4233 dpv
819 3155 dpv
1075 3155 dpv
1075 3258 dpv
921 3258 dpv
921 4131 dpv
1606 4131 dpv
1606 3378 dpv
1983 3378 dpv
dpf
1983 3480 dpb
1709 3480 dpv
1709 4233 dpv
819 4233 dpv
819 3155 dpv
1075 3155 dpv
1075 3258 dpv
921 3258 dpv
921 4131 dpv
1606 4131 dpv
1606 3378 dpv
1983 3378 dpv
dpu
1983 3429 dlt
-326 0 dlv
0 753 dlv
-787 0 dlv
0 -976 dlv
205 0 dlv
dle
2120 365 2256 502 dbf
137 136 2120 365 dbu
2479 1409 dpb
921 1409 dpv
921 3343 dpv
819 3343 dpv
819 1306 dpv
2479 1306 dpv
dpf
2479 1409 dpb
921 1409 dpv
921 3343 dpv
819 3343 dpv
819 1306 dpv
2479 1306 dpv
dpu
2342 4302 2479 4439 dbf
137 137 2342 4302 dbu
2684 4302 2821 4439 dbf
137 137 2684 4302 dbu
1914 3480 dpb
1914 3189 dpv
3044 3189 dpv
3044 3292 dpv
2017 3292 dpv
2017 3480 dpv
dpf
1914 3480 dpb
1914 3189 dpv
3044 3189 dpv
3044 3292 dpv
2017 3292 dpv
2017 3480 dpv
dpu
1965 3480 dlt
0 -239 dlv
1079 0 dlv
dle
3215 1392 3352 1529 dbf
137 137 3215 1392 dbu
4465 1512 dpb
4465 1375 dpv
3951 1375 dpv
3951 3104 dpv
3532 3104 dpv
3532 3001 dpv
3848 3001 dpv
3848 1272 dpv
4567 1272 dpv
4567 1512 dpv
dpf
4465 1512 dpb
4465 1375 dpv
3951 1375 dpv
3951 3104 dpv
3532 3104 dpv
3532 3001 dpv
3848 3001 dpv
3848 1272 dpv
4567 1272 dpv
4567 1512 dpv
dpu
4516 1512 dlt
0 -189 dlv
-616 0 dlv
0 1729 dlv
-368 0 dlv
dle
2958 1597 dpb
2958 211 dpv
3968 211 dpv
3968 1032 dpv
4910 1032 dpv
4910 1477 dpv
4807 1477 dpv
4807 1135 dpv
3866 1135 dpv
3866 313 dpv
3061 313 dpv
3061 1597 dpv
dpf
2958 1597 dpb
2958 211 dpv
3968 211 dpv
3968 1032 dpv
4910 1032 dpv
4910 1477 dpv
4807 1477 dpv
4807 1135 dpv
3866 1135 dpv
3866 313 dpv
3061 313 dpv
3061 1597 dpv
dpu
3010 1597 dlt
0 -1335 dlv
907 0 dlv
0 822 dlv
941 0 dlv
0 393 dlv
dle
5509 1495 5612 1597 dbf
102 103 5509 1495 dbu
1058 2744 dpb
1058 2881 dpv
1161 2881 dpv
1161 2744 dpv
dpf
1058 2744 dpb
1058 2881 dpv
1161 2881 dpv
1161 2744 dpv
dpu
0 -137 1110 2881 dls
1041 3429 1178 3566 dbf
137 137 1041 3429 dbu
1041 2881 1178 3018 dbf
137 137 1041 2881 dbu
1075 3566 dpb
1075 3857 dpv
1178 3857 dpv
1178 3566 dpv
dpf
1075 3566 dpb
1075 3857 dpv
1178 3857 dpv
1178 3566 dpv
dpu
0 291 1127 3566 dls
1075 3155 1212 3292 dbf
137 137 1075 3155 dbu
1058 2573 1229 2744 dbf
171 171 1058 2573 dbu
1075 3857 1246 4028 dbf
171 171 1075 3857 dbu
1212 3874 1349 4011 dbf
137 137 1212 3874 dbu
1195 2607 dpb
1195 2710 dpv
1366 2710 dpv
1366 2607 dpv
dpf
1195 2607 dpb
1195 2710 dpv
1366 2710 dpv
1366 2607 dpv
dpu
-171 0 1366 2659 dls
1332 3018 dpb
1332 3429 dpv
1435 3429 dpv
1435 3018 dpv
dpf
1332 3018 dpb
1332 3429 dpv
1435 3429 dpv
1435 3018 dpv
dpu
0 411 1383 3018 dls
1315 3429 1452 3566 dbf
137 137 1315 3429 dbu
1315 2881 1452 3018 dbf
137 137 1315 2881 dbu
1366 2590 1503 2727 dbf
137 137 1366 2590 dbu
1435 3172 1606 3275 dbf
103 171 1435 3172 dbu
1212 108 1383 279 dbf
171 171 1212 108 dbu
1298 1803 1435 1940 dbf
137 137 1298 1803 dbu
1298 587 1435 724 dbf
137 137 1298 587 dbu
1332 1512 1469 1649 dbf
137 137 1332 1512 dbu
1332 1512 1469 1649 dbf
137 137 1332 1512 dbu
1349 125 1486 262 dbf
137 137 1349 125 dbu
1709 587 dpb
1709 262 dpv
1349 262 dpv
1349 365 dpv
1606 365 dpv
1606 587 dpv
dpf
1709 587 dpb
1709 262 dpv
1349 262 dpv
1349 365 dpv
1606 365 dpv
1606 587 dpv
dpu
1657 587 dlt
0 -274 dlv
-308 0 dlv
dle
1589 587 1726 724 dbf
137 137 1589 587 dbu
1674 1067 1811 1204 dbf
137 137 1674 1067 dbu
1674 1067 1811 1204 dbf
137 137 1674 1067 dbu
1315 1940 dpb
1315 2213 dpv
1983 2213 dpv
1983 2111 dpv
1418 2111 dpv
1418 1940 dpv
dpf
1315 1940 dpb
1315 2213 dpv
1983 2213 dpv
1983 2111 dpv
1418 2111 dpv
1418 1940 dpv
dpu
1366 1940 dlt
0 222 dlv
617 0 dlv
dle
1315 724 dpb
1315 930 dpv
2034 930 dpv
2034 724 dpv
1931 724 dpv
1931 827 dpv
1418 827 dpv
1418 724 dpv
dpf
1315 724 dpb
1315 930 dpv
2034 930 dpv
2034 724 dpv
1931 724 dpv
1931 827 dpv
1418 827 dpv
1418 724 dpv
dpu
1366 724 dlt
0 154 dlv
617 0 dlv
0 -154 dlv
dle
1914 587 2051 724 dbf
137 137 1914 587 dbu
1983 2094 2120 2231 dbf
137 137 1983 2094 dbu
1983 1803 2120 1940 dbf
137 137 1983 1803 dbu
2120 365 2256 502 dbf
137 136 2120 365 dbu
2120 365 2256 502 dbf
137 136 2120 365 dbu
2120 2077 2291 2248 dbf
171 171 2120 2077 dbu
2342 861 2479 998 dbf
137 137 2342 861 dbu
2479 1289 2616 1426 dbf
137 137 2479 1289 dbu
2479 1289 2616 1426 dbf
137 137 2479 1289 dbu
2051 707 dpb
2051 604 dpv
2719 604 dpv
2719 707 dpv
dpf
2051 707 dpb
2051 604 dpv
2719 604 dpv
2719 707 dpv
dpu
668 0 2051 656 dls
2479 981 dpb
2736 981 dpv
2736 1597 dpv
2513 1597 dpv
2513 1820 dpv
2120 1820 dpv
2120 1922 dpv
2616 1922 dpv
2616 1700 dpv
2838 1700 dpv
2838 878 dpv
2479 878 dpv
dpf
2479 981 dpb
2736 981 dpv
2736 1597 dpv
2513 1597 dpv
2513 1820 dpv
2120 1820 dpv
2120 1922 dpv
2616 1922 dpv
2616 1700 dpv
2838 1700 dpv
2838 878 dpv
2479 878 dpv
dpu
2479 930 dlt
308 0 dlv
0 719 dlv
-222 0 dlv
0 222 dlv
-445 0 dlv
dle
2291 2213 dpb
2838 2213 dpv
2838 1940 dpv
2736 1940 dpv
2736 2111 dpv
2291 2111 dpv
dpf
2291 2213 dpb
2838 2213 dpv
2838 1940 dpv
2736 1940 dpv
2736 2111 dpv
2291 2111 dpv
dpu
2291 2162 dlt
496 0 dlv
0 -222 dlv
dle
2719 587 2856 724 dbf
137 137 2719 587 dbu
2719 1803 2856 1940 dbf
137 137 2719 1803 dbu
2838 1495 2975 1597 dbf
102 137 2838 1495 dbu
3181 1358 3352 1529 dbf
171 171 3181 1358 dbu
1777 4319 1948 4490 dbf
171 171 1777 4319 dbu
1828 2368 1965 2505 dbf
137 137 1828 2368 dbu
1811 2350 1983 2522 dbf
172 172 1811 2350 dbu
1880 2436 dpb
1880 2659 dpv
1983 2659 dpv
1983 2436 dpv
dpf
1880 2436 dpb
1880 2659 dpv
1983 2659 dpv
1983 2436 dpv
dpu
0 -223 1931 2659 dls
1863 2659 2000 2796 dbf
137 137 1863 2659 dbu
1863 3874 2000 4011 dbf
137 137 1863 3874 dbu
1914 4216 dpb
1914 4336 dpv
2017 4336 dpv
2017 4216 dpv
dpf
1914 4216 dpb
1914 4336 dpv
2017 4336 dpv
2017 4216 dpv
dpu
0 120 1965 4216 dls
1897 2950 2034 3087 dbf
137 137 1897 2950 dbu
1897 2950 2034 3087 dbf
137 137 1897 2950 dbu
1914 4336 2051 4473 dbf
137 137 1914 4336 dbu
2274 4011 dpb
2274 4216 dpv
1914 4216 dpv
1914 4114 dpv
2171 4114 dpv
2171 4011 dpv
dpf
2274 4011 dpb
2274 4216 dpv
1914 4216 dpv
1914 4114 dpv
2171 4114 dpv
2171 4011 dpv
dpu
2222 4011 dlt
0 154 dlv
-308 0 dlv
dle
2154 3874 2291 4011 dbf
137 137 2154 3874 dbu
2342 4302 2479 4439 dbf
137 137 2342 4302 dbu
2342 4302 2479 4439 dbf
137 137 2342 4302 dbu
1880 3874 dpb
1880 3669 dpv
2599 3669 dpv
2599 3874 dpv
2496 3874 dpv
2496 3771 dpv
1983 3771 dpv
1983 3874 dpv
dpf
1880 3874 dpb
1880 3669 dpv
2599 3669 dpv
2599 3874 dpv
2496 3874 dpv
2496 3771 dpv
1983 3771 dpv
1983 3874 dpv
dpu
1931 3874 dlt
0 -154 dlv
616 0 dlv
0 154 dlv
dle
2479 3874 2616 4011 dbf
137 137 2479 3874 dbu
2547 2659 2684 2796 dbf
137 137 2547 2659 dbu
2684 4302 2821 4439 dbf
137 137 2684 4302 dbu
2684 4302 2821 4439 dbf
137 137 2684 4302 dbu
2907 3600 3044 3737 dbf
137 137 2907 3600 dbu
3044 3172 3181 3309 dbf
137 137 3044 3172 dbu
3044 3172 3181 3309 dbf
137 137 3044 3172 dbu
2616 3891 dpb
2616 3994 dpv
3284 3994 dpv
3284 3891 dpv
dpf
2616 3891 dpb
2616 3994 dpv
3284 3994 dpv
3284 3891 dpv
dpu
668 0 2616 3942 dls
3044 3617 dpb
3301 3617 dpv
3301 3001 dpv
3078 3001 dpv
3078 2778 dpv
2684 2778 dpv
2684 2676 dpv
3181 2676 dpv
3181 2898 dpv
3403 2898 dpv
3403 3720 dpv
3044 3720 dpv
dpf
3044 3617 dpb
3301 3617 dpv
3301 3001 dpv
3078 3001 dpv
3078 2778 dpv
2684 2778 dpv
2684 2676 dpv
3181 2676 dpv
3181 2898 dpv
3403 2898 dpv
3403 3720 dpv
3044 3720 dpv
dpu
3044 3669 dlt
308 0 dlv
0 -719 dlv
-223 0 dlv
0 -223 dlv
-445 0 dlv
dle
3301 2436 dpb
3301 2727 dpv
3403 2727 dpv
3403 2436 dpv
dpf
3301 2436 dpb
3301 2727 dpv
3403 2727 dpv
3403 2436 dpv
dpu
0 291 3352 2436 dls
3284 3874 3421 4011 dbf
137 137 3284 3874 dbu
3284 2368 3421 2505 dbf
137 137 3284 2368 dbu
3284 2659 3421 2796 dbf
137 137 3284 2659 dbu
3266 2350 3438 2522 dbf
172 172 3266 2350 dbu
3403 3001 3540 3104 dbf
103 137 3403 3001 dbu
3575 1495 3746 1666 dbf
171 171 3575 1495 dbu
3198 1940 dpb
3198 1803 dpv
3301 1803 dpv
3301 1940 dpv
dpf
3198 1940 dpb
3198 1803 dpv
3301 1803 dpv
3301 1940 dpv
dpu
0 137 3249 1803 dls
3181 1118 3318 1255 dbf
137 137 3181 1118 dbu
3181 1666 3318 1803 dbf
137 137 3181 1666 dbu
3215 1118 dpb
3215 827 dpv
3318 827 dpv
3318 1118 dpv
dpf
3215 1118 dpb
3215 827 dpv
3318 827 dpv
3318 1118 dpv
dpu
0 -291 3266 1118 dls
3215 1392 3352 1529 dbf
137 137 3215 1392 dbu
3198 1940 3369 2111 dbf
171 171 3198 1940 dbu
3215 656 3386 827 dbf
171 171 3215 656 dbu
3352 673 3489 810 dbf
137 137 3352 673 dbu
3335 2077 dpb
3335 1974 dpv
3506 1974 dpv
3506 2077 dpv
dpf
3335 2077 dpb
3335 1974 dpv
3506 1974 dpv
3506 2077 dpv
dpu
-171 0 3506 2025 dls
3472 1666 dpb
3472 1255 dpv
3575 1255 dpv
3575 1666 dpv
dpf
3472 1666 dpb
3472 1255 dpv
3575 1255 dpv
3575 1666 dpv
dpu
0 -411 3523 1666 dls
3455 1118 3592 1255 dbf
137 137 3455 1118 dbu
3455 1666 3592 1803 dbf
137 137 3455 1666 dbu
3506 1957 3643 2094 dbf
137 137 3506 1957 dbu
3575 1409 3746 1512 dbf
103 171 3575 1409 dbu
4071 1495 4242 1666 dbf
171 171 4071 1495 dbu
5218 1135 5389 1306 dbf
171 171 5218 1135 dbu
4071 1803 4208 1940 dbf
137 137 4071 1803 dbu
4071 587 4208 724 dbf
137 137 4071 587 dbu
4105 1512 4242 1649 dbf
137 137 4105 1512 dbu
4105 1512 4242 1649 dbf
137 137 4105 1512 dbu
4379 587 dpb
4379 279 dpv
4482 279 dpv
4482 587 dpv
dpf
4379 587 dpb
4379 279 dpv
4482 279 dpv
4482 587 dpv
dpu
0 308 4431 279 dls
4328 108 4499 279 dbf
171 171 4328 108 dbu
4362 587 4499 724 dbf
137 137 4362 587 dbu
4448 1512 4585 1649 dbf
137 137 4448 1512 dbu
4448 1512 4585 1649 dbf
137 137 4448 1512 dbu
4465 125 4602 262 dbf
137 137 4465 125 dbu
4088 1940 dpb
4088 2213 dpv
4756 2213 dpv
4756 2111 dpv
4191 2111 dpv
4191 1940 dpv
dpf
4088 1940 dpb
4088 2213 dpv
4756 2213 dpv
4756 2111 dpv
4191 2111 dpv
4191 1940 dpv
dpu
4139 1940 dlt
0 222 dlv
617 0 dlv
dle
4088 724 dpb
4088 930 dpv
4807 930 dpv
4807 724 dpv
4704 724 dpv
4704 827 dpv
4191 827 dpv
4191 724 dpv
dpf
4088 724 dpb
4088 930 dpv
4807 930 dpv
4807 724 dpv
4704 724 dpv
4704 827 dpv
4191 827 dpv
4191 724 dpv
dpu
4139 724 dlt
0 154 dlv
617 0 dlv
0 -154 dlv
dle
4687 587 4824 724 dbf
137 137 4687 587 dbu
4756 2094 4893 2231 dbf
137 137 4756 2094 dbu
4756 1803 4893 1940 dbf
137 137 4756 1803 dbu
4790 1477 4927 1614 dbf
137 137 4790 1477 dbu
4790 1477 4927 1614 dbf
137 137 4790 1477 dbu
4893 2077 5064 2248 dbf
171 171 4893 2077 dbu
5115 861 5252 998 dbf
137 137 5115 861 dbu
5252 1101 5389 1238 dbf
137 137 5252 1101 dbu
5252 1101 5389 1238 dbf
137 137 5252 1101 dbu
4824 707 dpb
4824 604 dpv
5492 604 dpv
5492 707 dpv
dpf
4824 707 dpb
4824 604 dpv
5492 604 dpv
5492 707 dpv
dpu
668 0 4824 656 dls
5252 981 dpb
5509 981 dpv
5509 1597 dpv
5286 1597 dpv
5286 1820 dpv
4893 1820 dpv
4893 1922 dpv
5389 1922 dpv
5389 1700 dpv
5612 1700 dpv
5612 878 dpv
5252 878 dpv
dpf
5252 981 dpb
5509 981 dpv
5509 1597 dpv
5286 1597 dpv
5286 1820 dpv
4893 1820 dpv
4893 1922 dpv
5389 1922 dpv
5389 1700 dpv
5612 1700 dpv
5612 878 dpv
5252 878 dpv
dpu
5252 930 dlt
308 0 dlv
0 719 dlv
-222 0 dlv
0 222 dlv
-445 0 dlv
dle
5064 2213 dpb
5612 2213 dpv
5612 1940 dpv
5509 1940 dpv
5509 2111 dpv
5064 2111 dpv
dpf
5064 2213 dpb
5612 2213 dpv
5612 1940 dpv
5509 1940 dpv
5509 2111 dpv
5064 2111 dpv
dpu
5064 2162 dlt
496 0 dlv
0 -222 dlv
dle
5509 1495 5612 1597 dbf
102 103 5509 1495 dbu
5492 587 5629 724 dbf
137 137 5492 587 dbu
5492 1803 5629 1940 dbf
137 137 5492 1803 dbu
5 fds
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 <0000> fdf
5 <1111> fdf
5 <0000> fdf
5 <4444> fdf
5 fde
5 sfp
1000 0 1000 slc
1000 0 1000 sfc
3061 22 3797 348 dbf
326 736 3061 22 dbu
3797 22 3866 365 dbf
343 69 3797 22 dbu
5218 1238 dpb
3985 1238 dpv
3985 1358 dpv
3181 1358 dpv
3181 1255 dpv
3883 1255 dpv
3883 1135 dpv
5218 1135 dpv
dpf
5218 1238 dpb
3985 1238 dpv
3985 1358 dpv
3181 1358 dpv
3181 1255 dpv
3883 1255 dpv
3883 1135 dpv
5218 1135 dpv
dpu
5218 1186 dlt
-1284 0 dlv
0 120 dlv
-702 0 dlv
0 -51 dlv
dle
3746 1546 dpb
3746 1649 dpv
4071 1649 dpv
4071 1546 dpv
dpf
3746 1546 dpb
3746 1649 dpv
4071 1649 dpv
4071 1546 dpv
dpu
325 0 3746 1597 dls
836 2025 1674 2522 dbf
497 838 836 2025 dbu
1692 2385 2513 2539 dbf
154 821 1692 2385 dbu
2975 1940 3883 2573 dbf
633 908 2975 1940 dbu
3883 2025 5834 2573 dbf
548 1951 3883 2025 dbu
836 4079 1657 4576 dbf
497 821 836 4079 dbu
2787 4233 3609 4576 dbf
343 822 2787 4233 dbu
1058 2573 1229 2744 dbf
171 171 1058 2573 dbu
1075 3857 1246 4028 dbf
171 171 1075 3857 dbu
836 2522 1657 2796 dbf
274 821 836 2522 dbu
836 3771 1657 4114 dbf
343 821 836 3771 dbu
1212 108 1383 279 dbf
171 171 1212 108 dbu
2120 2077 2291 2248 dbf
171 171 2120 2077 dbu
1092 2025 3061 2299 dbf
274 1969 1092 2025 dbu
1092 22 3061 365 dbf
343 1969 1092 22 dbu
3181 1358 3352 1529 dbf
171 171 3181 1358 dbu
3369 4319 3540 4490 dbf
171 171 3369 4319 dbu
3386 108 3557 279 dbf
171 171 3386 108 dbu
1777 4319 1948 4490 dbf
171 171 1777 4319 dbu
1811 2350 1983 2522 dbf
172 172 1811 2350 dbu
3266 2350 3438 2522 dbf
172 172 3266 2350 dbu
1657 2299 3626 2573 dbf
274 1969 1657 2299 dbu
1657 4233 3626 4576 dbf
343 1969 1657 4233 dbu
3575 1495 3746 1666 dbf
171 171 3575 1495 dbu
3198 1940 3369 2111 dbf
171 171 3198 1940 dbu
3215 656 3386 827 dbf
171 171 3215 656 dbu
2975 1888 3797 2162 dbf
274 822 2975 1888 dbu
2975 570 3797 912 dbf
342 822 2975 570 dbu
4071 1495 4242 1666 dbf
171 171 4071 1495 dbu
5218 1135 5389 1306 dbf
171 171 5218 1135 dbu
4328 108 4499 279 dbf
171 171 4328 108 dbu
4893 2077 5064 2248 dbf
171 171 4893 2077 dbu
3866 2025 5834 2299 dbf
274 1968 3866 2025 dbu
3866 22 5834 365 dbf
343 1968 3866 22 dbu
6 fds
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 <0808> fdf
6 <0404> fdf
6 <0202> fdf
6 <0101> fdf
6 <8080> fdf
6 <4040> fdf
6 <2020> fdf
6 <1010> fdf
6 fde
6 sfp
0 1000 1000 slc
0 1000 1000 sfc
3369 4319 3540 4490 dbf
171 171 3369 4319 dbu
3369 4319 3540 4490 dbf
171 171 3369 4319 dbu
3386 108 3557 279 dbf
171 171 3386 108 dbu
3386 108 3557 279 dbf
171 171 3386 108 dbu
1 fds
1 <0000> fdf
1 <4410> fdf
1 <0000> fdf
1 <0000> fdf
1 <0082> fdf
1 <0000> fdf
1 <0000> fdf
1 <4410> fdf
1 <0000> fdf
1 <0000> fdf
1 <0082> fdf
1 <0000> fdf
1 <0000> fdf
1 <4410> fdf
1 <0000> fdf
1 <0000> fdf
1 fde
1 sfp
1000 1000 800 slc
1000 1000 800 sfc
3421 194 dpb
3421 4405 dpv
3523 4405 dpv
3523 194 dpv
dpf
3421 194 dpb
3421 4405 dpv
3523 4405 dpv
3523 194 dpv
dpu
0 4211 3472 194 dls
3369 4319 3540 4490 dbf
171 171 3369 4319 dbu
3386 108 3557 279 dbf
171 171 3386 108 dbu
502 149 149 slc
0 0 0 sfc
1075 3463 1144 3532 dbs
1075 2915 1144 2984 dbs
1110 3189 1178 3258 dbs
1246 3908 1315 3977 dbs
1349 3463 1418 3532 dbs
1349 2915 1418 2984 dbs
1401 2624 1469 2693 dbs
1332 621 1401 690 dbs
1332 1837 1401 1905 dbs
1366 1546 1435 1614 dbs
1383 159 1452 228 dbs
1623 621 1692 690 dbs
1709 1101 1777 1169 dbs
1948 621 2017 690 dbs
2017 2128 2085 2196 dbs
2017 1837 2085 1905 dbs
2154 399 2222 467 dbs
2376 895 2445 964 dbs
2513 1323 2582 1392 dbs
2753 621 2821 690 dbs
2753 1837 2821 1905 dbs
1863 2402 1931 2470 dbs
1897 3908 1965 3977 dbs
1897 2693 1965 2761 dbs
1931 2984 2000 3052 dbs
1948 4370 2017 4439 dbs
2188 3908 2256 3977 dbs
2376 4336 2445 4405 dbs
2513 3908 2582 3977 dbs
2582 2693 2650 2761 dbs
2719 4336 2787 4405 dbs
2941 3634 3010 3703 dbs
3078 3206 3147 3275 dbs
3318 2402 3386 2470 dbs
3318 3908 3386 3977 dbs
3318 2693 3386 2761 dbs
3215 1152 3284 1221 dbs
3215 1700 3284 1768 dbs
3249 1426 3318 1495 dbs
3386 707 3455 776 dbs
3489 1152 3557 1221 dbs
3489 1700 3557 1768 dbs
3540 1991 3609 2059 dbs
4105 621 4174 690 dbs
4105 1837 4174 1905 dbs
4139 1546 4208 1614 dbs
4396 621 4465 690 dbs
4482 1546 4550 1614 dbs
4499 159 4567 228 dbs
4722 621 4790 690 dbs
4790 2128 4858 2196 dbs
4790 1837 4858 1905 dbs
4824 1512 4893 1580 dbs
5149 895 5218 964 dbs
5286 1135 5355 1204 dbs
5526 621 5595 690 dbs
5526 1837 5595 1905 dbs
2 fds
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 <aaaa> fdf
2 <7777> fdf
2 <aaaa> fdf
2 <dddd> fdf
2 fde
2 sfp
200 200 600 slc
1000 0 1000 sfc
1092 2607 1195 2710 dbf
103 103 1092 2607 dbu
1110 3891 1212 3994 dbf
103 102 1110 3891 dbu
1246 142 1349 245 dbf
103 103 1246 142 dbu
2154 2111 2256 2213 dbf
102 102 2154 2111 dbu
3215 1392 3318 1495 dbf
103 103 3215 1392 dbu
1811 4353 1914 4456 dbf
103 103 1811 4353 dbu
1846 2385 1948 2487 dbf
102 102 1846 2385 dbu
3301 2385 3403 2487 dbf
102 102 3301 2385 dbu
3609 1529 3712 1631 dbf
102 103 3609 1529 dbu
3232 1974 3335 2077 dbf
103 103 3232 1974 dbu
3249 690 3352 793 dbf
103 103 3249 690 dbu
4105 1529 4208 1631 dbf
102 103 4105 1529 dbu
5252 1169 5355 1272 dbf
103 103 5252 1169 dbu
4362 142 4465 245 dbf
103 103 4362 142 dbu
4927 2111 5030 2213 dbf
102 103 4927 2111 dbu
224 749 1000 slc
224 749 1000 sfc
3403 4353 3506 4456 dbf
103 103 3403 4353 dbu
3421 142 3523 245 dbf
103 102 3421 142 dbu
1000 902 749 slc
1000 902 749 sfc
3403 4353 3506 4456 dbf
103 103 3403 4353 dbu
3421 142 3523 245 dbf
103 102 3421 142 dbu
1000 1000 1000 slc
1000 1000 1000 sfc
2034 2366 dpb
1914 2299 dpv
1914 2233 dpv
2034 2299 dpv
dpu
819 0 5841 4600 clwin
gfs
%%Trailer
%%EOF
